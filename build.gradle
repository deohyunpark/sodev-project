plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
}

repositories {
    mavenCentral()
}

bootJar {
    mainClass = 'dev.be.SodevApiApplication'
}

subprojects {
    group = 'dev.be'
    version = '0.0.1-SNAPSHOT'

    java {
        sourceCompatibility = '17'
    }

    apply plugin: 'java'
//    apply plugin: 'java-library' // build.gradle 에서 api() 를 사용하려면 java-library 사용
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management' // spring boot dependency 를 사용하여 사용중인 부트 버전에서 자동으로 의존성을 가져온다.

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    // 관리하는 모듈의 공통 dependencies
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.7.1'
        implementation 'io.hypersistence:hypersistence-utils-hibernate-62:3.3.2'
        compileOnly 'org.projectlombok:lombok'
        runtimeOnly 'org.postgresql:postgresql'
        runtimeOnly 'com.h2database:h2'
        annotationProcessor 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.7.2'
        testAnnotationProcessor 'org.projectlombok:lombok'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }

    tasks.register("prepareKotlinBuildScriptModel") {}
}
